syntax = "proto3";
package pkivaultrpc;
option go_package = "github.com/ZolaraProject/pki-vault-service/pkivaultrpc";

service pkiVaultService {
    rpc GetUsers(UserRequest) returns (UserList) {}
    rpc GetUserProfile(GetUserRequest) returns (UserInList) {}
    rpc CreateUser(UserCreateRequest) returns (Response) {}
    rpc UpdateUser(UserUpdateRequest) returns (Response) {}
    rpc DeleteUser(UserDeleteRequest) returns (Response) {}
}

enum UserRole {
    ADMIN = 0;
    USER = 1;
}

message PagingQuery {
    string search = 1;
    string order = 2;
    string sort = 3;
    int64 limit = 4;
    int64 offset = 5;
}

// request messages
message UserDeleteRequest {
    int64 id = 1;
}

message UserUpdateRequest {
    int64 id = 1;
    string username = 2;
    string email = 3;
    string password = 4;
    UserRole role = 5;
}

message UserCreateRequest {
    string username = 1;
    string email = 2;
    string password = 3;
    bool isOAuth = 4;
}

message GetUserRequest {
    int64 id = 1;
}

message UserRequest {
    PagingQuery pagingQuery = 1;
    string username = 2;
    string email = 3;
}

// response messages
message UserList {
    repeated UserInList users = 1;
    int64 total = 2;
}

message UserInList {
    int64 id = 1;
    string username = 2;
    string email = 3;
    string password = 4;
    repeated UserLanguageProfile languages = 5;
    string role = 6;
    bool isOAuth = 7;
}

message UserLanguageProfile {
    string language = 1;
    repeated string actions = 2;
}

message Response {
    string message = 1;
    int64 createdId = 2;
}
