syntax = "proto3";
package userVault;
option go_package = "back/vault/userVault";

service UserVault {
    rpc GetUsers(UserRequest) returns (UserList) {}
    rpc GetUserProfile(UserInList) returns (UserInList) {}
    rpc GetUserInterests(UserInList) returns (UserInterests) {}
    rpc CreateUser(UserInList) returns (Response) {}
    rpc UpdateUser(UserUpdateRequest) returns (Response) {}
    rpc DeleteUser(UserInList) returns (Response) {}
}

message PagingQuery {
    string search = 1;
    string order = 2;
    string sort = 3;
    int64 limit = 4;
    int64 offset = 5;
}

message UserInterests {
    repeated string interests = 1;
}

message UserLanguageProfile {
    string language = 1;
    repeated UserAction actions = 2;
}

message UserAction {
    string level = 1;
    string action = 2;
}

enum UserRole {
    ADMIN = 0;
    USER = 1;
}

message UserUpdateRequest {
    int64 id = 1;
    string username = 2;
    string email = 3;
    string password = 4;
    UserRole role = 5;
}

message UserRequest {
    PagingQuery pagingQuery = 1;
    string username = 2;
    string email = 3;
}

message UserInList {
    int64 id = 1;
    string username = 2;
    string email = 3;
    string password = 4;
    repeated UserLanguageProfile languages = 5;
    string role = 6;
    bool isOAuth = 7;
}

message UserList {
    repeated UserInList users = 1;
    int64 total = 2;
}

message Response {
    string message = 1;
    int64 createdId = 2;
}
